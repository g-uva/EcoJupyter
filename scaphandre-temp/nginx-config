# This is the Nginx configuration for the bare-metal server in order to redirect traffic for the different services.
# The explanation of the several possibilities is described down below.

# ─────────────────────────────────────────────────────────────
# 1) HTTP → HTTPS
# ─────────────────────────────────────────────────────────────
server {
    listen      80;
    server_name mc-a4.lab.uvalight.net;
    return      301 https://$host$request_uri;
}

# ─────────────────────────────────────────────────────────────
# 2) HTTPS vhost for Grafana & JupyterHub
# ─────────────────────────────────────────────────────────────
server {
    listen       443 ssl http2;
    server_name  mc-a4.lab.uvalight.net;

    ##––– SSL (Certbot managed) –––
    ssl_certificate     /etc/letsencrypt/live/mc-a4.lab.uvalight.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mc-a4.lab.uvalight.net/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;

    # ──────────────────────────────────────────────────────────
    # A) Redirect bare “/” → “/grafana/”
    # ──────────────────────────────────────────────────────────
    location = / {
        return 302 /grafana/;
    }

    # ──────────────────────────────────────────────────────────
    # B) Redirect “/jupyter” → “/jupyter/”
    # ──────────────────────────────────────────────────────────
    location = /jupyter {
        return 302 /jupyter/;
    }

    # ──────────────────────────────────────────────────────────
    # C) JupyterHub @ /jupyter/
    # ──────────────────────────────────────────────────────────
    location ^~ /jupyter/ {
        # pass the /jupyter/ prefix straight through
        proxy_pass         http://127.0.0.1:8000;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header   Upgrade   $http_upgrade;
        proxy_set_header   Connection "upgrade";

        # JupyterHub knows its /jupyter/ base, so no need to rewrite Location:
        proxy_redirect     off;
    }

    # ──────────────────────────────────────────────────────────
    # D) Grafana @ /grafana/
    # ──────────────────────────────────────────────────────────
    location ^~ /grafana/ {
        # pass the /grafana/ prefix through intact
        proxy_pass         http://127.0.0.1:3000;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        # Rewrite any Grafana Location: headers back under /grafana/
        proxy_redirect     http://127.0.0.1:3000/ /grafana/;
    }

    # ──────────────────────────────────────────────────────────
    # E) Catch-all: everything else → 404
    # ──────────────────────────────────────────────────────────
    location / {
        return 404;
    }
}